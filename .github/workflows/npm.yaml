name: npm

on:
  push:
    paths:
      - 'npm/**'
      - '.github/**npm**'

jobs:
 
  actions-test:
    name: actions-test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: check cache is available
        id: check-cache-available
        working-directory: npm
        env:
          CACHE_KEY: ${{ runner.os }}-build-cache-npm-${{ hashFiles('npm/package-lock.json') }}
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          if gh extension list ${{ env.CACHE_KEY }} | grep -q "gh-actions-cache"
            then echo "already installed"
            else gh extension install actions/gh-actions-cache
          fi

          if gh actions-cache list "${{ env.CACHE_KEY }}" | grep -q "${{ env.CACHE_KEY }}"
            then echo "::set-output name=cache::hit"
            else echo "::set-output name=cache::miss"
          fi

  install:
    name: install
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: npm

    steps:
      - uses: actions/checkout@v3

      - name: Cache Node packages
        uses: ./.github/compose/cache-npm
        with:
          token: ${{ secrets.GH_TOKEN}}

  build:
    name: build
    runs-on: ubuntu-latest
    needs: [install]
    defaults:
      run:
        working-directory: npm

    steps:
      - uses: actions/checkout@v3

      - name: Restore node_modules
        uses: ./.github/compose/cache-npm

      - name: Cache build
        uses: actions/cache@v3
        id: cache-next
        with:
        # https://nextjs.org/docs/advanced-features/ci-build-caching#github-actions
          path: |
            .next/cache
          key: ${{ runner.os }}-nextjs-${{ hashFiles('npm/package-lock.json') }}-${{ hashFiles('npm/**/*.[jt]s', 'npm/**/*.[jt]sx') }}
          restore-keys: |
            ${{ runner.os }}-nextjs-${{ hashFiles('npm/package-lock.json') }}-

      - if: ${{ steps.cache-next.outputs.cache-hit != 'true' }}
        name: Build
        run: npm run build

  lint:
    name: lint
    runs-on: ubuntu-latest
    needs: [install]
    defaults:
      run:
        working-directory: npm

    steps:
      - uses: actions/checkout@v3

      - name: Restore node_modules
        uses: ./.github/compose/cache-npm

      - name: Lint
        run: npm run lint
