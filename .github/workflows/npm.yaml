name: npm

on:
  push:
    paths:
      - 'npm/**'
      - '.github/**npm**'
env:
  cache-version: v2

jobs:
  install:
    name: Check cache and create it if not exist
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: npm

    steps:
      - uses: actions/checkout@v3

      - name: Cache Node packages
        uses: ./.github/compose/cache-check
        id: cache-node
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          cache-key: ${{ runner.os }}-build-cache-npm-${{ env.cache-version }}-${{ hashFiles('npm/package-lock.json') }}
      - name: Restore node_modules
        if: ${{ steps.cache-node.outputs.cache-hit != 'true' }}
        uses: ./.github/compose/cache-npm
        with:
          cache-version: ${{ env.cache-version }}

  build:
    name: build
    runs-on: ubuntu-latest
    needs: [install]
    defaults:
      run:
        working-directory: npm

    steps:
      - uses: actions/checkout@v3

      - name: Restore node_modules
        uses: ./.github/compose/cache-npm
        with:
          cache-version: ${{ env.cache-version }}

      - name: Cache build
        uses: actions/cache@v3
        id: cache-next
        with:
        # https://nextjs.org/docs/advanced-features/ci-build-caching#github-actions
          path: |
            npm/.next/cache
          key: ${{ runner.os }}-nextjs-${{ hashFiles('npm/package-lock.json') }}-${{ hashFiles('npm/**/*.[jt]s', 'npm/**/*.[jt]sx') }}
          restore-keys: |
            ${{ runner.os }}-nextjs-${{ hashFiles('npm/package-lock.json') }}-

      - if: ${{ steps.cache-next.outputs.cache-hit != 'true' }}
        name: Build
        run: npm run build

  lint:
    name: lint
    runs-on: ubuntu-latest
    needs: [install]
    defaults:
      run:
        working-directory: npm

    steps:
      - uses: actions/checkout@v3

      - name: Restore node_modules
        uses: ./.github/compose/cache-npm
        with:
          cache-version: ${{ env.cache-version }}

      - name: Lint
        run: npm run lint
