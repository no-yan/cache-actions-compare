name: 'Install node_modules'
description: 'Install node_modules'

# gh cli needs GH_TOKEN, but in composite actions we cannot pass ${{ secrets.GITHUB_TOKEN }} directly.
inputs:
  token:
      description: 'Your token'
      required: true
outputs:
  random-number:
    description: "Random number"
    value: ${{ steps.check-cache-available.outputs.cache-hit }}

runs:
  using: "composite"
  steps:
    - name: check cache is available test
      shell: bash
      id: check-cache-available
      env:
        CACHE_KEY: ${{ runner.os }}-build-cache-npm-v2-${{ hashFiles('npm/package-lock.json') }}
        GH_TOKEN: ${{ inputs.token }}
      run: |
        if gh extension list | grep -q "gh-actions-cache"
          then echo "already installed"
          else gh extension install actions/gh-actions-cache
        fi

        if gh actions-cache list --key "${{ env.CACHE_KEY }}" | grep -q "${{ env.CACHE_KEY }}"
          then echo "::set-output name=cache-hit::true"
          else echo "::set-output name=cache-hit::true"
        fi

    - uses: actions/cache@v3
      if: steps.check-cache-available.outputs.cache == 'miss'
      id: cache-npm
      env:
        cache-name: cache-npm-v2
      # https://docs.github.com/en/actions/using-workflows/caching-dependencies-to-speed-up-workflows#example-using-the-cache-action
      with:
        path: |
          ~/.npm
        key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('npm/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-build-${{ env.cache-name }}-
          ${{ runner.os }}-build-
          ${{ runner.os }}-

    # Because it only restores ~/.npm but, it always needs `npm ci` to recover ./node-modules.
    # Instead, we can cache `node-modules` directly. See: https://zenn.dev/odan/scraps/81b2738864a908
    - name: npm ci
      if: steps.check-cache-available.outputs.cache == 'miss'
      shell: bash
      working-directory: npm
      run: |
        npm ci
